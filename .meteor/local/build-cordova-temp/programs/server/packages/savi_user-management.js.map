{"version":3,"sources":["savi:user-management/both/router.js","savi:user-management/server/publish.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,W;AACA,gB;AACA,W;AACA,c;AACA,iB;AACA,yB;AACA,4B;AACA,E;AACA,W;AACA,sC;AACA,W;AACA,sC;AACA,G;AACA,uC;AACA,I;AACA,gC;AACA,oB;AACA,4B;AACA,wD;AACA,oD;AACA,I;AACA,qB;AACA,gC;AACA,G;AACA,I;AACA,wC;AACA,G;AACA,iB;AACA,I;AACA,4B;AACA,oB;AACA,qB;AACA,4B;AACA,2B;AACA,oC;AACA,kC;AACA,I;AACA,mB;AACA,+C;AACA,I;AACA,qB;AACA,iB;AACA,G;AACA,I;AACA,K;AACA,yJ;;;;;;;;;;;;;;;;;;AC7CA,kD;AACA,8C;AACA,kC;AACA,gC;AACA,E;AACA,G;AACA,8C;AACA,oD;AACA,8C;AACA,kC;AACA,2B;AACA,E;AACA,G","file":"/packages/savi_user-management.js","sourcesContent":["// --------\n// Route Configs\n// --------\nvar config = {\n\troute: '/admin',\n\tname: 'user-management',\n\ttemplate: 'user-management'\n};\n// --------\n// Determine project router to be used\n// --------\nif(typeof FlowRouter !== 'undefined'){\n\t/*\n\t * FlowRouter: Is it using FlowLayout?\n\t */\n\tFlowRouter.route(config.route,{\n\t\tname: config.name,\n\t\tsubscriptions: function(){\n\t\t\tthis.register('Dealers',Meteor.subscribe('dealers'));\n\t\t\tthis.register('Users',Meteor.subscribe('users'));\n\t\t},\n\t\taction: function(){\n\t\t\tthis.render(config.template);\n\t\t}\n\t});\n}else if(typeof Router !== 'undefined'){\n\t/*\n\t * Iron-Router: \n\t */\n\tRouter.route(config.route,{\n\t\tname: config.name,\n\t\tpath: config.route,\n\t\ttemplate: config.template,\n\t\tsubscription: function(){\n\t\t\tthis.subscribe('Dealers').wait();\n\t\t\tthis.subscribe('Users').wait();\n\t\t},\n\t\tdata: function(){\n\t\t\treturn [Dealers.find(),Meteor.users.find()];\n\t\t},\n\t\taction: function(){\n\t\t\tthis.render();\n\t\t}\n\t});\n}else\n\tthrow new Meteor.error('(Dependency)User-Management: Missing Router','User-Management could not find a router. Make sure one is added to the project.');","Meteor.publish('users', function(selector, opts) {\n\tvar user = Meteor.users.findOne(this.userId);\n\tif(user && user.profile.isAdmin){\n    \treturn Meteor.users.find();\n\t}\n});\nDealers = CollectionManager.create('dealers');\nMeteor.publish('dealers', function(selector, opts) {\n\tvar user = Meteor.users.findOne(this.userId);\n\tif(user && user.profile.isAdmin){\n    \treturn Dealers.find();\n\t}\n});"]}