{"version":3,"sources":["savi:user-management/both/router.js","savi:user-management/both/collections.js","savi:user-management/client/userManagement.html","savi:user-management/client/userManagement.js"],"names":[],"mappings":";;;;;;;;AAAA,W;AACA,gB;AACA,W;AACA,c;AACA,oB;AACA,4B;AACA,2B;AACA,E;AACA,W;AACA,sC;AACA,W;AACA,wC;AACA,M;AACA,0C;AACA,O;AACA,oC;AACA,0B;AACA,mC;AACA,kE;AACA,6D;AACA,U;AACA,4B;AACA,wD;AACA,2C;AACA,4D;AACA,6B;AACA,yD;AACA,2B;AACA,mB;AACA,+D;AACA,6C;AACA,kB;AACA,mC;AACA,S;AACA,O;AACA,2C;AACA,M;AACA,sC;AACA,O;AACA,gC;AACA,0B;AACA,2B;AACA,kC;AACA,4B;AACA,4E;AACA,U;AACA,4B;AACA,wD;AACA,8B;AACA,uC;AACA,8C;AACA,8B;AACA,gB;AACA,+B;AACA,S;AACA,O;AACA,M;AACA,8I;;;;;;;;;;;;;;;;;;ACzDA,0C;AACA,sC;;;;;;;;;;;;;;;;;;;ACAA,oC;AACA,4E;AACA,kB;AACA,8B;AACA,kD;AACA,iB;AACA,oD;AACA,oB;AACA,uC;AACA,qB;AACA,c;AACA,uC;AACA,4B;AACA,6C;AACA,K;AACA,I;;AAEA,oC;AACA,4E;AACA,kB;AACA,mB;AACA,mB;AACA,uI;AACA,sB;AACA,0L;AACA,I;;AAEA,wC;AACA,oF;AACA,kB;AACA,mB;AACA,qB;AACA,0B;AACA,0C;AACA,gD;AACA,iB;AACA,0I;AACA,sF;AACA,wI;AACA,8E;AACA,mB;AACA,8D;AACA,oF;AACA,S;AACA,mB;AACA,4B;AACA,yD;AACA,yB;AACA,mB;AACA,yB;AACA,oF;AACA,O;AACA,wH;AACA,gF;AACA,mB;AACA,gE;AACA,sF;AACA,S;AACA,mB;AACA,4B;AACA,yD;AACA,2B;AACA,mB;AACA,yB;AACA,sF;AACA,O;AACA,uH;AACA,+E;AACA,mB;AACA,+D;AACA,qF;AACA,S;AACA,mB;AACA,4B;AACA,yD;AACA,0B;AACA,mB;AACA,yB;AACA,qF;AACA,O;AACA,qH;AACA,kF;AACA,mB;AACA,kE;AACA,wF;AACA,S;AACA,mB;AACA,4B;AACA,yD;AACA,6B;AACA,mB;AACA,yB;AACA,wF;AACA,O;AACA,+C;AACA,+E;AACA,mB;AACA,4J;AACA,qF;AACA,8D;AACA,4B;AACA,2B;AACA,uF;AACA,S;AACA,6B;AACA,2G;AACA,0D;AACA,wD;AACA,yB;AACA,0C;AACA,4B;AACA,yB;AACA,sD;AACA,O;AACA,yC;AACA,uC;AACA,iH;AACA,gB;AACA,I;;AAEA,0C;AACA,wF;AACA,kB;AACA,mB;AACA,sB;AACA,0C;AACA,kD;AACA,iB;AACA,iI;AACA,wD;AACA,sB;AACA,qB;AACA,c;AACA,2B;AACA,qB;AACA,c;AACA,+C;AACA,sD;AACA,iK;AACA,0D;AACA,yD;AACA,2B;AACA,mB;AACA,yB;AACA,4D;AACA,O;AACA,4I;AACA,yD;AACA,yD;AACA,0B;AACA,mB;AACA,yB;AACA,2D;AACA,O;AACA,6I;AACA,4D;AACA,yD;AACA,6B;AACA,mB;AACA,yB;AACA,8D;AACA,O;AACA,+C;AACA,qD;AACA,mB;AACA,oJ;AACA,2D;AACA,8D;AACA,4B;AACA,2B;AACA,6D;AACA,S;AACA,6B;AACA,oC;AACA,yB;AACA,0C;AACA,yB;AACA,yB;AACA,sD;AACA,O;AACA,yC;AACA,sC;AACA,gG;AACA,8B;AACA,yB;AACA,sD;AACA,O;AACA,yC;AACA,kC;AACA,mH;AACA,iB;AACA,+J;AACA,gB;AACA,I;;;;;;;;;;;;;;;;;;;AClMA,0B;;AAEA,+C;AACA,8C;AACA,6C;AACA,kB;AACA,G;;AAEA,E;AACA,4D;AACA,G;;AAEA,8B;;AAEA,G;;AAEA,6B;AACA,+B;AACA,gC;AACA,wF;AACA,sD;AACA,M;AACA,iC;AACA,kC;AACA,wF;AACA,sD;AACA,M;AACA,uB;AACA,oC;AACA,mC;AACA,uD;AACA,M;AACA,8B;AACA,0D;AACA,mC;AACA,wB;AACA,4B;AACA,wC;AACA,kC;AACA,sD;AACA,M;AACA,8B;AACA,sD;AACA,mC;AACA,wB;AACA,4B;AACA,qD;AACA,kC;AACA,oD;AACA,K;AACA,G;;AAEA,E;AACA,6B;AACA,G;;AAEA,oC;AACA,8C;AACA,2B;AACA,8B;AACA,mB;AACA,+B;AACA,gB;AACA,2B;AACA,kC;AACA,iB;AACA,c;AACA,W;AACA,0C;AACA,iB;AACA,K;AACA,G;;AAEA,mC;AACA,yB;AACA,mC;AACA,gC;AACA,+C;AACA,iB;AACA,qB;AACA,oB;AACA,uC;AACA,oC;AACA,0B;AACA,4C;AACA,gD;AACA,8C;AACA,oD;AACA,0D;AACA,8C;AACA,wC;AACA,iB;AACA,c;AACA,iE;AACA,yB;AACA,oD;AACA,oB;AACA,2D;AACA,e;AACA,c;AACA,wD;AACA,M;AACA,8B;AACA,wC;AACA,gC;AACA,+C;AACA,qB;AACA,+F;AACA,yB;AACA,0E;AACA,6B;AACA,iE;AACA,wB;AACA,mE;AACA,mB;AACA,a;AACA,c;AACA,kD;AACA,M;AACA,G;;AAEA,E;AACA,4B;AACA,G;;AAEA,kC;AACA,2C;AACA,yB;AACA,oC;AACA,wC;AACA,iB;AACA,K;AACA,G;;AAEA,iC;AACA,4B;AACA,sC;AACA,8B;AACA,gD;AACA,mB;AACA,uG;AACA,yB;AACA,sE;AACA,6B;AACA,6D;AACA,wB;AACA,iE;AACA,mB;AACA,a;AACA,c;AACA,gD;AACA,K;AACA,G","file":"/packages/savi_user-management.js","sourcesContent":["// --------\n// Route Configs\n// --------\nvar config = {\n    route: '/admin',\n    name: 'user-management',\n    template: 'adminLayout'\n};\n// --------\n// Determine project router to be used\n// --------\nif (typeof FlowRouter !== 'undefined') {\n    /*\n     * FlowRouter: Is it using FlowLayout?\n     */\n    FlowRouter.route(config.route, {\n        name: config.name,\n        subscriptions: function() {\n            this.register('dealers', Meteor.subscribe('dealers'));\n            this.register('users',Meteor.subscribe('users'));\n        },\n        action: function() {\n            var access = roles.findOne(Meteor.userId());\n            if (access && access.isAdmin) {\n                Meteor.call('getUsers', function(err, res) {\n                    if (!err)\n                        return Session.set('users', res);\n                    return;\n                });\n                // Subscriptions will load reactively - no wait\n                this.render(config.template);\n            } else\n                FlowRouter.go('/');\n        }\n    });\n} else if (typeof Router !== 'undefined') {\n    /*\n     * Iron-Router: Or Matching Router\n     */\n    Router.route(config.route, {\n        name: config.name,\n        path: config.route,\n        template: config.template,\n        waitOn: function() {\n            return [Meteor.subscribe('dealers'), Meteor.subscribe('users')];\n        },\n        action: function() {\n            var access = roles.findOne(Meteor.userId());\n            if (!this.ready())\n                this.render('loading');\n            else if (access && access.isAdmin)\n                this.render();\n            else\n                Router.go('/');\n        }\n    });\n} else\n    throw new Meteor.Error('(Dependency) User-Management', 'User-Management could not find a router. Make sure one is added to the project.');","dealers = new Mongo.Collection('dealers');\nroles = new Mongo.Collection('roles');","\nTemplate.__checkName(\"adminButton\");\nTemplate[\"adminButton\"] = new Template(\"Template.adminButton\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isAdmin\"));\n  }, function() {\n    return [ \"\\n    \", HTML.P(\"\\n        \", HTML.A({\n      href: \"/admin\"\n    }, \"\\n            \", HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \"Â \"\n    }), \"Admin\\n            \", HTML.I({\n      \"class\": \"fa fa-users\"\n    }), \"\\n        \"), \"\\n    \"), \"\\n    \" ];\n  });\n}));\n\nTemplate.__checkName(\"adminLayout\");\nTemplate[\"adminLayout\"] = new Template(\"Template.adminLayout\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"adminTabs\"\n  }, HTML.Raw('\\n        <span id=\"dealers\" class=\"selectedTab\">Dealers</span><span id=\"users\">Users</span>\\n        '), HTML.SECTION({\n    id: \"user-manager\"\n  }, \"\\n            \", Spacebars.include(view.lookupTemplate(\"usersManagement\")), \"\\n            \", Spacebars.include(view.lookupTemplate(\"dealersManagement\")), \"\\n        \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"usersManagement\");\nTemplate[\"usersManagement\"] = new Template(\"Template.usersManagement\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"users\",\n    style: \"display:none;\"\n  }, \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"users\"));\n  }, function() {\n    return [ \"\\n        \", HTML.ARTICLE(\"\\n            \", HTML.H2(\"\\n                \", Blaze.View(\"lookup:emails.0.address\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"emails\"), \"0\", \"address\"));\n    }), \"\\n            \"), \"\\n            \", HTML.LABEL(\"Company\"), \"\\n            \", HTML.P(\"\\n                \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"profile\"), \"company\"));\n    }, function() {\n      return Blaze.View(\"lookup:profile.company\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"profile\"), \"company\"));\n      });\n    }, function() {\n      return HTML.I(\"null\");\n    }), \"\\n            \"), \"\\n            \", HTML.INPUT({\n      \"class\": \"company\",\n      type: \"text\",\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"profile\"), \"company\"));\n      }\n    }), \"\\n            \", HTML.LABEL(\"First Name\"), \"\\n            \", HTML.P(\"\\n                \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"profile\"), \"firstName\"));\n    }, function() {\n      return Blaze.View(\"lookup:profile.firstName\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"profile\"), \"firstName\"));\n      });\n    }, function() {\n      return HTML.I(\"null\");\n    }), \"\\n            \"), \"\\n            \", HTML.INPUT({\n      \"class\": \"firstName\",\n      type: \"text\",\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"profile\"), \"firstName\"));\n      }\n    }), \"\\n            \", HTML.LABEL(\"Last Name\"), \"\\n            \", HTML.P(\"\\n                \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"profile\"), \"lastName\"));\n    }, function() {\n      return Blaze.View(\"lookup:profile.lastName\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"profile\"), \"lastName\"));\n      });\n    }, function() {\n      return HTML.I(\"null\");\n    }), \"\\n            \"), \"\\n            \", HTML.INPUT({\n      \"class\": \"lastName\",\n      type: \"text\",\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"profile\"), \"lastName\"));\n      }\n    }), \"\\n            \", HTML.LABEL(\"Phone #\"), \"\\n            \", HTML.P(\"\\n                \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"profile\"), \"phoneNumber\"));\n    }, function() {\n      return Blaze.View(\"lookup:profile.phoneNumber\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"profile\"), \"phoneNumber\"));\n      });\n    }, function() {\n      return HTML.I(\"null\");\n    }), \"\\n            \"), \"\\n            \", HTML.INPUT({\n      \"class\": \"phoneNumber\",\n      type: \"text\",\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"profile\"), \"phoneNumber\"));\n      }\n    }), \"\\n            \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"profile\"), \"comments\"));\n    }, function() {\n      return [ \"\\n            \", HTML.LABEL(\"Comment(s)\"), \"\\n            \", HTML.P(\"\\n                \", Blaze.View(\"lookup:profile.comments\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"profile\"), \"comments\"));\n      }), \"\\n            \"), \"\\n            \", HTML.TEXTAREA({\n        \"class\": \"comments\",\n        value: function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"profile\"), \"comments\"));\n        }\n      }), \"\\n            \" ];\n    }), \"\\n            \", HTML.DIV(\"\\n                \", HTML.I(Blaze.View(\"lookup:createdAt\", function() {\n      return Spacebars.mustache(view.lookup(\"createdAt\"));\n    })), \"\\n            \"), \"\\n            \", HTML.DIV({\n      \"class\": \"controls\"\n    }, \"\\n                \", HTML.BUTTON({\n      \"class\": \"removeUser\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"_id\"));\n      }\n    }, \"\\n                    \", HTML.I({\n      \"class\": \"fa fa-user-times fa-fw\"\n    }), \"\\n                    Remove User\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n\nTemplate.__checkName(\"dealersManagement\");\nTemplate[\"dealersManagement\"] = new Template(\"Template.dealersManagement\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"dealers\"\n  }, \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"dealers\"));\n  }, function() {\n    return [ \"\\n        \", HTML.ARTICLE(\"\\n            \", HTML.H2(\"\\n                \", Blaze.View(\"lookup:company\", function() {\n      return Spacebars.mustache(view.lookup(\"company\"));\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \"Â \"\n    }), \"-\", HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \"Â \"\n    }), Blaze.View(\"lookup:email\", function() {\n      return Spacebars.mustache(view.lookup(\"email\"));\n    }), \"\\n            \"), \"\\n            \", HTML.LABEL(\"First Name\"), \"\\n            \", HTML.P(\"\\n                \", Blaze.View(\"lookup:firstName\", function() {\n      return Spacebars.mustache(view.lookup(\"firstName\"));\n    }), \"\\n            \"), \"\\n            \", HTML.INPUT({\n      \"class\": \"firstName\",\n      type: \"text\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"firstName\"));\n      }\n    }), \"\\n            \", HTML.LABEL(\"Last Name\"), \"\\n            \", HTML.P(\"\\n                \", Blaze.View(\"lookup:lastName\", function() {\n      return Spacebars.mustache(view.lookup(\"lastName\"));\n    }), \"\\n            \"), \"\\n            \", HTML.INPUT({\n      \"class\": \"lastName\",\n      type: \"text\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"lastName\"));\n      }\n    }), \"\\n            \", HTML.LABEL(\"Phone #\"), \"\\n            \", HTML.P(\"\\n                \", Blaze.View(\"lookup:phoneNumber\", function() {\n      return Spacebars.mustache(view.lookup(\"phoneNumber\"));\n    }), \"\\n            \"), \"\\n            \", HTML.INPUT({\n      \"class\": \"phoneNumber\",\n      type: \"text\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"phoneNumber\"));\n      }\n    }), \"\\n            \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"comments\"));\n    }, function() {\n      return [ \"\\n            \", HTML.LABEL(\"Comment(s)\"), \"\\n            \", HTML.P(\"\\n                \", Blaze.View(\"lookup:comments\", function() {\n        return Spacebars.mustache(view.lookup(\"comments\"));\n      }), \"\\n            \"), \"\\n            \", HTML.TEXTAREA({\n        \"class\": \"comments\",\n        value: function() {\n          return Spacebars.mustache(view.lookup(\"comments\"));\n        }\n      }), \"\\n            \" ];\n    }), \"\\n            \", HTML.DIV({\n      \"class\": \"controls\"\n    }, \"\\n                \", HTML.BUTTON({\n      \"class\": \"addUser\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"_id\"));\n      }\n    }, \"\\n                    \", HTML.I({\n      \"class\": \"fa fa-user-plus fa-fw\"\n    }), \"\\n                    Add User\\n                \"), \"\\n                \", HTML.BUTTON({\n      \"class\": \"removeDealer\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"_id\"));\n      }\n    }, \"\\n                    \", HTML.I({\n      \"class\": \"fa fa-times fa-fw\"\n    }), \"\\n                    Remove Dealer\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n        \" ];\n  }, function() {\n    return [ \"\\n        \", HTML.DIV(\"\\n            \", HTML.H1(\"\\n                No Dealers Awaiting Approval..\\n            \"), \"\\n        \"), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n","Meteor.subscribe('roles');\n\nTemplate.registerHelper('isAdmin', function() {\n    var role = roles.findOne(Meteor.userId());\n    var access = role ? role.isAdmin : false;\n    return access;\n});\n\n/*\n * Admin Layout Template (Combines Dealer & User Management)\n */\n\nTemplate.adminLayout.helpers({\n\n});\n\nTemplate.adminLayout.events({\n    // Tab for Users Management\n    'click #users': function() {\n        $('#users').addClass('selectedTab').prev('#dealers').removeClass('selectedTab');\n        $('div.users').show().next('.dealers').hide();\n    },\n    // Tab for Dealers Management\n    'click #dealers': function() {\n        $('#dealers').addClass('selectedTab').next('#users').removeClass('selectedTab');\n        $('div.dealers').show().prev('.users').hide();\n    },\n    // Start Field Edit\n    'click article p': function(e) {\n        var t = $(e.currentTarget);\n        t.hide().next('input,textarea').show().focus();\n    },\n    // Save and End Field Edit\n    'blur .dealers input,.dealers textarea': function(e) {\n        var t = $(e.currentTarget),\n            update = {},\n            value = t.val();\n        update[t.attr('class')] = value;\n        t.hide().prev('p').show();\n        Meteor.call('updateDealer', this._id, update);\n    },\n    // Save and End Field Edit\n    'blur .users input,.users textarea': function(e) {\n        var t = $(e.currentTarget),\n            update = {},\n            value = t.val();\n        update['profile.' + t.attr('class')] = value;\n        t.hide().prev('p').show();\n        Meteor.call('updateUser', this._id, update);\n    }\n});\n\n/*\n * Dealer Management Template\n */\n\nTemplate.dealersManagement.helpers({\n    // Retrieves Dealers List for Data Context\n    'dealers': function() {\n        var d = dealers.find({\n            $or: [{\n                'isUser': false\n            }, {\n                'isUser': {\n                    $exists: false\n                }\n            }]\n        });\n        console.log('dealers', d.fetch());\n        return d;\n    }\n});\n\nTemplate.dealersManagement.events({\n    // Button to Add User\n    'click .addUser': function(e) {\n        var dealerId = this._id,\n            dealer = dealers.findOne(dealerId),\n            user;\n        if (dealer) {\n            user = {\n                username: dealer.email,\n                email: dealer.email,\n                profile: {\n                    company: dealer.company,\n                    firstName: dealer.firstName,\n                    lastName: dealer.lastName,\n                    phoneNumber: dealer.phoneNumber,\n                    mailingList: dealer.mailList || false,\n                    comments: dealer.comments,\n                    dealerId: dealer._id\n                }\n            };\n            Meteor.call('addUser', dealerId, function(err, res) {\n                if (!err)\n                    console.log('Added User:', res);\n                else\n                    console.log('Error adding user:', err);\n            });\n        } else\n            console.log('Error moving dealer to users');\n    },\n    // Button to Remove Dealer\n    'click .removeDealer': function(e) {\n        var dealerId = this._id;\n        var dealer = dealers.findOne(dealerId);\n        if (dealer) {\n            var remove = confirm('Delete ' + dealer.email + ' dealer? This cannot be undone.');\n            if (remove) {\n                Meteor.call('removeDealer', dealerId, function(err, res) {\n                    if (!err)\n                        console.log('Removed Dealer:', dealerId);\n                    else\n                        console.log('Error removing dealer:', err);\n                });\n            }\n        } else\n            console.log('Error removing dealer.');\n    },\n});\n\n/*\n * Users Management Template\n */\n\nTemplate.usersManagement.helpers({\n    // Retrieves User List for Data Context\n    'users': function() {\n        var u = Meteor.users.find();\n        console.log('users', u.fetch());\n        return u;\n    }\n});\n\nTemplate.usersManagement.events({\n    // Button to Remove User\n    'click .removeUser': function(e) {\n        var userId = this._id;\n        var user = Meteor.users.findOne(userId);\n        if (user) {\n            var remove = confirm('Delete ' + user.emails[0].address + ' user? This cannot be undone.');\n            if (remove) {\n                Meteor.call('removeUser', userId, function(err, res) {\n                    if (!err)\n                        console.log('Removed User:', userId);\n                    else\n                        console.log('Error removing user:', err);\n                });\n            }\n        } else\n            console.log('Error removing user.');\n    }\n});"]}