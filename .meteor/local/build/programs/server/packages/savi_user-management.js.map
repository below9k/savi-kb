{"version":3,"sources":["savi:user-management/both/router.js","savi:user-management/both/collections.js","savi:user-management/server/publish.js","savi:user-management/server/methods.js","savi:user-management/server/email.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,W;AACA,gB;AACA,W;AACA,c;AACA,oB;AACA,4B;AACA,2B;AACA,E;AACA,W;AACA,sC;AACA,W;AACA,wC;AACA,M;AACA,0C;AACA,O;AACA,oC;AACA,0B;AACA,mC;AACA,kE;AACA,6D;AACA,U;AACA,4B;AACA,wD;AACA,2C;AACA,4D;AACA,6B;AACA,yD;AACA,2B;AACA,mB;AACA,+D;AACA,6C;AACA,kB;AACA,mC;AACA,S;AACA,O;AACA,2C;AACA,M;AACA,sC;AACA,O;AACA,gC;AACA,0B;AACA,2B;AACA,kC;AACA,4B;AACA,4E;AACA,U;AACA,4B;AACA,wD;AACA,8B;AACA,uC;AACA,8C;AACA,8B;AACA,gB;AACA,+B;AACA,S;AACA,O;AACA,M;AACA,8I;;;;;;;;;;;;;;;;;;ACzDA,0C;AACA,sC;;;;;;;;;;;;;;;;;;ACDA,sC;AACA,4C;AACA,+B;AACA,wB;AACA,c;AACA,G;AACA,oC;AACA,yC;AACA,+B;AACA,6B;AACA,c;AACA,G;AACA,kC;AACA,mB;AACA,uC;AACA,c;AACA,G;;;;;;;;;;;;;;;;;;AChBA,gB;AACA,mC;AACA,+C;AACA,qB;AACA,wB;AACA,uC;AACA,oC;AACA,0B;AACA,8C;AACA,kD;AACA,gD;AACA,sD;AACA,4D;AACA,gD;AACA,2C;AACA,oC;AACA,iB;AACA,c;AACA,mD;AACA,yB;AACA,qD;AACA,6E;AACA,0C;AACA,2B;AACA,sC;AACA,qB;AACA,mB;AACA,8B;AACA,a;AACA,gB;AACA,qF;AACA,oG;AACA,S;AACA,M;AACA,gC;AACA,iE;AACA,qB;AACA,6E;AACA,kB;AACA,0E;AACA,8G;AACA,a;AACA,W;AACA,sB;AACA,M;AACA,kC;AACA,4D;AACA,qB;AACA,+E;AACA,kB;AACA,4E;AACA,kH;AACA,a;AACA,W;AACA,sB;AACA,M;AACA,iC;;AAEA,M;AACA,6C;AACA,iB;AACA,uB;AACA,U;AACA,8E;AACA,qB;AACA,mF;AACA,kB;AACA,wE;AACA,oH;AACA,a;AACA,W;AACA,sB;AACA,M;AACA,+C;AACA,iB;AACA,uB;AACA,U;AACA,yE;AACA,qB;AACA,qF;AACA,kB;AACA,0E;AACA,wH;AACA,a;AACA,W;AACA,sB;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;ACvFA,2E;AACA,sD;AACA,uE;AACA,gE;AACA,oE;AACA,E;AACA,kE;AACA,4B;AACA,2B;AACA,4D;AACA,qI;AACA,oE;AACA,mC;AACA,iJ;AACA,E","file":"/packages/savi_user-management.js","sourcesContent":["// --------\n// Route Configs\n// --------\nvar config = {\n    route: '/admin',\n    name: 'user-management',\n    template: 'adminLayout'\n};\n// --------\n// Determine project router to be used\n// --------\nif (typeof FlowRouter !== 'undefined') {\n    /*\n     * FlowRouter: Is it using FlowLayout?\n     */\n    FlowRouter.route(config.route, {\n        name: config.name,\n        subscriptions: function() {\n            this.register('dealers', Meteor.subscribe('dealers'));\n            this.register('users',Meteor.subscribe('users'));\n        },\n        action: function() {\n            var access = roles.findOne(Meteor.userId());\n            if (access && access.isAdmin) {\n                Meteor.call('getUsers', function(err, res) {\n                    if (!err)\n                        return Session.set('users', res);\n                    return;\n                });\n                // Subscriptions will load reactively - no wait\n                this.render(config.template);\n            } else\n                FlowRouter.go('/');\n        }\n    });\n} else if (typeof Router !== 'undefined') {\n    /*\n     * Iron-Router: Or Matching Router\n     */\n    Router.route(config.route, {\n        name: config.name,\n        path: config.route,\n        template: config.template,\n        waitOn: function() {\n            return [Meteor.subscribe('dealers'), Meteor.subscribe('users')];\n        },\n        action: function() {\n            var access = roles.findOne(Meteor.userId());\n            if (!this.ready())\n                this.render('loading');\n            else if (access && access.isAdmin)\n                this.render();\n            else\n                Router.go('/');\n        }\n    });\n} else\n    throw new Meteor.Error('(Dependency) User-Management', 'User-Management could not find a router. Make sure one is added to the project.');","dealers = new Mongo.Collection('dealers');\nroles = new Mongo.Collection('roles');","Meteor.publish('dealers', function() {\n    var access = roles.findOne(this.userId);\n\tif (access && access.isAdmin) \n\t\treturn dealers.find();\n    return [];\n});\nMeteor.publish('users', function() {\n\tvar access = roles.findOne(this.userId);\n\tif (access && access.isAdmin) \n\t\treturn Meteor.users.find();\n    return [];\n});\nMeteor.publish('roles',function(){\n    if(this.userId)\n        return roles.find(this.userId);\n    return [];\n});","Meteor.methods({\n    'addUser': function(dealerId) {\n        var dealer = dealers.findOne(dealerId);\n        if (dealer) {\n            var user = {\n                username: dealer.email,\n                email: dealer.email,\n                profile: {\n                    'company': dealer.company,\n                    'firstName': dealer.firstName,\n                    'lastName': dealer.lastName,\n                    'phoneNumber': dealer.phoneNumber,\n                    'mailingList': dealer.mailList || false,\n                    'comments': dealer.comments,\n                    'dealerId': dealer._id,\n                    'isAdmin': false\n                }\n            };\n            var userId = Accounts.createUser(user);\n            if (userId) {\n                Accounts.sendEnrollmentEmail(userId);\n                console.log('Enrollment Email sent to:', userId, user.email);\n                dealers.update(dealerId, {\n                    $set: {\n                        'isUser': true\n                    }\n                });\n                return userId;\n            }\n        } else {\n            console.log('An error occured adding dealer ', dealerId, ' - not found');\n            Meteor.Error('SAVI:User-Management: Adding-User', 'Dealer was not found - ' + dealerId);\n        }\n    },\n    'removeUser': function(id) {\n        var update = Meteor.users.remove(id, function(err, res) {\n            if (!err)\n                console.log(Meteor.userId(), 'removed:', res, 'user(s)', id);\n            else {\n                console.log('An error occured during user removal ', err);\n                Meteor.Error('SAVI:User-Management: Removing-User', 'User could not be removed - ' + id, err);\n            }\n        });\n        return update;\n    },\n    'removeDealer': function(id) {\n        var update = dealers.remove(id, function(err, res) {\n            if (!err)\n                console.log(Meteor.userId(), 'removed:', res, 'dealer(s)', id);\n            else {\n                console.log('An error occured during dealer removal ', err);\n                Meteor.Error('SAVI:User-Management: Removing-Dealer', 'Dealer could not be removed - ' + id, err);\n            }\n        });\n        return update;\n    },\n    'addDealer': function(opts) {\n\n    },\n    'updateUser': function(selector, query) {\n        query = {\n            $set: query\n        };\n        var update = Meteor.users.update(selector, query, function(err, res) {\n            if (!err)\n                console.log(Meteor.userId(), 'updated:', res, 'user(s)', selector);\n            else {\n                console.log('An error occured during user update', err);\n                Meteor.Error('SAVI:User-Management: Updating-User', 'User could not be updated - ' + selector, err);\n            }\n        });\n        return update;\n    },\n    'updateDealer': function(selector, query) {\n        query = {\n            $set: query\n        };\n        var update = dealers.update(selector, query, function(err, res) {\n            if (!err)\n                console.log(Meteor.userId(), 'updated:', res, 'dealer(s)', selector);\n            else {\n                console.log('An error occured during dealer update', err);\n                Meteor.Error('SAVI:User-Management: Updating-Dealer', 'Dealer could not be updated - ' + selector, err);\n            }\n        });\n        return update;\n    }\n});","absoluteUrl = 'http://meteor.l2share.net:3001'; // Leave off trailing slash\nAccounts.emailTemplates.siteName = 'savicontrols.com';\nAccounts.emailTemplates.from = 'SAVI Controls <info@savicontrols.com>';\nAccounts.emailTemplates.enrollAccount.subject = function(user) {\n    return 'SAVI Controls - Your Dealer Account has been accepted!';\n};\nAccounts.emailTemplates.enrollAccount.html = function(user, url) {\n    url = url.split('#')[1];\n    var host = absoluteUrl;\n    return 'Hello, ' + user.profile.firstName + '<br><br>' +\n        'Your account is not yet activated. You must first <a href=\"' + host + url + '\">verify your email by clicking here</a><br>' +\n        'After verifying your account/email you may login.<br><br>'+\n        '- SAVI Controls<br><br>' +\n        'Do not reply to this email - Please contact <a href=\"mailto:support@savicontrols.com\">support@savicontrols.com</a> for additional help';\n};"]}